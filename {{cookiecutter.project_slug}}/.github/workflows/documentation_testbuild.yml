name: Test Documentation Build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

# Default to bash
defaults:
  run:
    shell: bash

jobs:

  dump-context:
    runs-on: ubuntu-latest
    steps:
      - name: Dump context "GitHub"
        env:
          GITHUB_CONTEXT: {% raw %}${{ toJson(github) }}{% endraw %}
        run: echo "$GITHUB_CONTEXT"

  test-build-documentation:
    runs-on: {% if cookiecutter.target_os_platform == 'windows-latest' -%} windows-latest {%- else -%} ubuntu-latest {%- endif %}
    steps:
      {% if cookiecutter.target_os_platform == 'windows-latest' -%}
      - name: Install Cairo via MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-cairo
      - name: Add MSYS2 Cairo to PATH to make cairocffi libraries like libcairo-2.dll discoverable
        shell: powershell
        # "C:\msys64\mingw64\bin" did not work, try "C:\Program Files\Unity Hub\resources\app.asar.unpacked\node_modules\canvas\build\Release"
        # found using Get-ChildItem -Path C:\ -Filter "*libcairo*.d*" -File -Recurse -ErrorAction SilentlyContinue in Log step
        run: |
          echo "C:\Program Files\Unity Hub\resources\app.asar.unpacked\node_modules\canvas\build\Release" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "CAIROCFFI_DLL_DIRECTORIES=C:\Program Files\Unity Hub\resources\app.asar.unpacked\node_modules\canvas\build\Release" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Log environment variable updates
        shell: powershell
        run: |
          Write-Host "GITHUB_PATH: $env:PATH"
          Write-Host "CAIROCFFI_DLL_DIRECTORIES: $env:CAIROCFFI_DLL_DIRECTORIES"
      {% endif -%}
      - name: Check out the repository
        uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
          hatch env create docs
      - name: Build documentation
        run: hatch run docs:build-check
